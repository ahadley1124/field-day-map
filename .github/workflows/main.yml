name: 'publish'

# on a pull request and a push to the main branch
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-20.04
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install cargo-tauri-version
        run: cargo install cargo-tauri-version
      - name: get version
        run: echo "PACKAGE_VERSION=$(node version.js)" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `field-day-map-v${process.env.PACKAGE_VERSION}`,
              name: `Field Day Mapping v${process.env.PACKAGE_VERSION}`,
              body: 'Take a look at the assets to download and install this app.',
              draft: true,
              prerelease: false
            })
            return data.id

  build-project:
    needs: create-release
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
      - name: build project
        run: |
          cargo build --release
          cp target/release/field-day-map ../field-day-map
      - name: Upload field-day-map
        uses: actions/upload-artifact@v2
        with:
          name: field-day-map
          path: field-day-map

  publish-release:
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    needs: [create-release, build-project]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          release_id: ${{ needs.create-release.outputs.release_id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id,
              draft: false,
              prerelease: false
            })
  delete-release:
    # only run this if all three of the matrix jobs fail (i.e. all platforms fail)
    if: ${{ failure() && needs.build-project.result == 'failure' || needs.publish-release.result == 'failure' }}
    permissions:
      contents: write
    runs-on: ubuntu-22.04
    needs: [create-release, build-project]
    env:
      release_id: ${{ needs.create-release.outputs.release_id }}
    steps:
      - name: delete release
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.repos.deleteRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.release_id
            })